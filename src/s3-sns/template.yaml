AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Send logs from S3 bucket to Coralogix.
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Coralogix-S3-via-SNS
    Description: Send logs from S3 bucket to Coralogix via SNS trigger.
    Author: Coralogix
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels:
      - coralogix
      - logs
      - s3
      - sns
    HomePageUrl: https://coralogix.com
    SemanticVersion: 1.0.28
    SourceCodeUrl: https://github.com/coralogix/coralogix-aws-serverless
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Coralogix configuration
        Parameters:
          - ApplicationName
          - SubsystemName
          - ApiKey
          - CoralogixRegion
          - CustomDomain
          - Debug
      - Label:
          default: Integration configuration
        Parameters:
          - SNSTopicArn
          - S3BucketName
          - NotificationEmail
          - NewlinePattern
      - Label:
          default: Lambda configuration
        Parameters:
          - FunctionArchitecture
          - FunctionMemorySize
          - FunctionTimeout
          - BufferSize
          - SamplingRate
          - BlockingPattern
    ParameterLabels:
      CoralogixRegion:
        default: Region
      ApiKey:
        default: Api Key
      CustomDomain:
        default: ""
      ApplicationName:
        default: Application Name
      SubsystemName:
        default: Subsystem Name
      NewlinePattern:
        default: Newline Pattern
      SamplingRate:
        default: Sampling Rate
      BufferSize:
        default: Buffer Size
      Debug:
        default: Debug Mode
      S3BucketName:
        default: Bucket Name
      SNSTopicArn:
        default: Topic Arn
      FunctionArchitecture:
        default: Architecture
      FunctionMemorySize:
        default: Memory
      FunctionTimeout:
        default: Timeout
      NotificationEmail:
        default: Notification Email
Parameters:
  CoralogixRegion:
    Type: String
    Description: The Coralogix location region [Europe, Europe2, India, Singapore, US, US2]
    AllowedValues:
      - Europe
      - Europe2
      - India
      - Singapore
      - US
      - US2
    Default: Europe
  CustomDomain: 
    Type: String
    Description: The Coralogix custom domain
    Default: '' 
  ApiKey:
    Type: String
    Description: The Coralogix api key which is used to validate your authenticity
    NoEcho: true
  ApplicationName:
    Type: String
    Description: The name of your application
    MinLength: 1
    MaxLength: 64
  SubsystemName:
    Type: String
    Description: The subsystem name of your application
    MinLength: 1
    MaxLength: 64
  NewlinePattern:
    Type: String
    Description: The pattern for lines splitting
    Default: '(?:\r\n|\r|\n)'
  BlockingPattern:
    Type: String
    Description: The pattern for lines blocking
    Default: ''
  SamplingRate:
    Type: Number
    Description: Send messages with specific rate
    MinValue: 1
    Default: 1
  BufferSize:
    Type: Number
    Description: Coralogix logger buffer size
    MinValue: 12582912
    Default: 134217728
  Debug:
    Type: String
    Description: Coralogix logger debug mode
    AllowedValues:
      - true
      - false
    Default: false
  SNSTopicArn:
    Type: String
    Description: The ARN of SNS topic to subscribe
    MinLength: 20
    MaxLength: 2048
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket to watch
    AllowedPattern: '^[0-9A-Za-z\.\-_]*(?<!\.)$'
    MinLength: 3
    MaxLength: 63
  FunctionArchitecture:
    Type: String
    Description: Lambda function architecture [x86_64, arm64]
    AllowedValues:
      - x86_64
      - arm64
    Default: x86_64
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory limit
    MinValue: 128
    MaxValue: 10240
    Default: 1024
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout limit
    MinValue: 30
    MaxValue: 900
    Default: 300
  NotificationEmail:
    Type: String
    Description: Failure notification email address
    MaxLength: 320
    Default: ''
Mappings:
  CoralogixRegionMap:
    Europe:
      LogUrl: coralogix.com
    Europe2:
      LogUrl: eu2.coralogix.com
    India:
      LogUrl: coralogix.in
    Singapore:
      LogUrl: coralogixsg.com
    US:
      LogUrl: coralogix.us
    US2:
      LogUrl: cx498.coralogix.com
Conditions:
  IsNotificationEnabled:
    Fn::Not:
      - Fn::Equals:
          - Ref: NotificationEmail
          - ''
  IsRegionCustomUrlEmpty: !Not [!Equals [!Ref CustomDomain, ""]] 

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Send logs from S3 bucket to Coralogix via SNS Trigger.
      CodeUri: .
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_URL: !If
            - IsRegionCustomUrlEmpty
            - !Sub  'https://ingress.${CustomDomain}/api/v1/logs'
            - !Sub
              - '${Prefix}${Domain}${Suffix}'
              - Prefix: https://ingress.
                Domain: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, LogUrl]
                Suffix: /api/v1/logs
          CORALOGIX_BUFFER_SIZE:
            Ref: BufferSize
          private_key:
            Ref: ApiKey
          app_name:
            Ref: ApplicationName
          sub_name:
            Ref: SubsystemName
          newline_pattern:
            Ref: NewlinePattern
          blocking_pattern:
            Ref: BlockingPattern
          sampling:
            Ref: SamplingRate
          debug:
            Ref: Debug
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic:
              Ref: SNSTopicArn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
      Policies:
        - S3ReadPolicy:
            BucketName:
              Ref: S3BucketName        

  LambdaFunctionNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: IsNotificationEnabled
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn:
        Ref: LambdaFunction.DestinationTopic
        