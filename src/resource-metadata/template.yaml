AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Send resource metadata to Coralogix.
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Coralogix-Resource-Metadata
    Description: Send resource metadata to Coralogix.
    Author: Coralogix
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels:
      - coralogix
      - metadata
    HomePageUrl: https://coralogix.com
    SemanticVersion: 1.1.3
    SourceCodeUrl: https://github.com/coralogix/coralogix-aws-serverless
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Coralogix Configuration
        Parameters:
          - CoralogixRegion
          - PrivateKey
          - CustomDomain
      - Label:
          default: Metadata Collection Configuration
        Parameters:
          - Schedule
          - ResourceTtlMinutes
      - Label:
          default: AWS Lambda Metadata Collection Configuration
        Parameters:
          - LatestVersionsPerFunction
      - Label:
          default: Lambda Configuration
        Parameters:
          - FunctionArchitecture
          - FunctionMemorySize
          - FunctionTimeout
          - NotificationEmail
          - LayerARN
          - SsmEnabled
    ParameterLabels:
      CoralogixRegion:
        default: Region
      CustomDomain:
        default: CustomDomain
      LayerARN:
        default: coralogix ssm layer
      SsmEnabled:
        default: false
      PrivateKey:
        default: Private Key
      Schedule:
        default: Schedule
      LatestVersionsPerFunction:
        default: Latest Versions Per Function
      ResourceTtlMinutes:
        default: Resource Time-to-live (TTL) in Minutes
      FunctionArchitecture:
        default: Architecture
      FunctionMemorySize:
        default: Memory
      FunctionTimeout:
        default: Timeout
      NotificationEmail:
        default: Notification Email
Parameters:
  CoralogixRegion:
    Type: String
    Description: The Coralogix location region [Europe, Europe2, India, Singapore, US]
    AllowedValues:
      - DevShared
      - Staging
      - Europe
      - Europe2
      - India
      - Singapore
      - US
    Default: Europe
  CustomDomain:
    Type: String
    Description: The Coralogix custom domain
    Default: ''
  PrivateKey:
    Type: String
    Description: The Coralogix private key which is used to validate your authenticity
    NoEcho: true
  LayerARN:
    Type: String
    Description: Coralogix SSM Layer ARN
    Default: ''
  SsmEnabled:
    Type: String
    Description: store coralogix private_key as a secret. True/False
    Default: 'False'
  Schedule:
    Type: String
    Description: Collect metadata on a specific schedule
    MaxLength: 256
    Default: "rate(10 minutes)"
  LatestVersionsPerFunction:
    Type: Number
    Description: How many latest published versions of each Lambda function should be collected
    MinValue: 0
    Default: 5
  ResourceTtlMinutes:
    Type: Number
    Description: Once a resource is collected, how long should it remain valid?
    Default: 60
  FunctionArchitecture:
    Type: String
    Description: Lambda function architecture [x86_64, arm64]
    AllowedValues:
      - x86_64
      - arm64
    Default: x86_64
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory limit
    MinValue: 128
    MaxValue: 10240
    Default: 256
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout limit
    MinValue: 30
    MaxValue: 900
    Default: 300
  NotificationEmail:
    Type: String
    Description: Failure notification email address
    MaxLength: 320
    Default: ""
Mappings:
  CoralogixRegionMap:
    DevShared:
      MetadataUrl: ingress.dev-shared.coralogix.net:443
    Staging:
      MetadataUrl: ingress.staging.coralogix.net:443
    Europe:
      MetadataUrl: ingress.coralogix.com:443
    Europe2:
      MetadataUrl: ingress.eu2.coralogix.com:443
    India:
      MetadataUrl: ingress.app.coralogix.in:443
    Singapore:
      MetadataUrl: ingress.coralogixsg.com:443
    US:
      MetadataUrl: ingress.coralogix.us:443

Conditions:
  IsNotificationEnabled:
    Fn::Not:
      - Fn::Equals:
          - Ref: NotificationEmail
          - ""
  IsSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'True'
  IsNotSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'False'
  IsRegionCustomUrlEmpty: !Not [!Equals [!Ref CustomDomain, ""]]

Resources:
  LambdaFunction:
    Condition: IsNotSsmEnabled
    Type: AWS::Serverless::Function
    Properties:
      Description: Send resource metadata to Coralogix.
      CodeUri: .
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_METADATA_URL: !If 
            - IsRegionCustomUrlEmpty
            - !Ref CustomDomain
            - !FindInMap [ CoralogixRegionMap, !Ref CoralogixRegion, MetadataUrl ]
          private_key:
            Ref: PrivateKey
          LATEST_VERSIONS_PER_FUNCTION:
            Ref: LatestVersionsPerFunction
          RESOURCE_TTL_MINUTES:
            Ref: ResourceTtlMinutes
          AWS_RETRY_MODE: adaptive
          AWS_MAX_ATTEMPTS: 10
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule:
              Ref: Schedule
            Enabled: True
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Sid: GetLambdaMetadata
              Effect: Allow
              Action:
                - ec2:DescribeInstances
                - lambda:ListFunctions
                - lambda:ListVersionsByFunction
                - lambda:GetFunction
                - lambda:ListAliases
                - lambda:ListEventSourceMappings
                - lambda:GetPolicy
              Resource: "*"
  LambdaFunctionSSM:
    Condition: IsSsmEnabled
    Type: AWS::Serverless::Function
    Properties:
      Description: Send resource metadata to Coralogix.
      CodeUri: .
      Layers:
        - Ref: LayerARN
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_METADATA_URL: !If 
            - IsRegionCustomUrlEmpty
            - !Ref CustomDomain
            - !FindInMap [ CoralogixRegionMap, !Ref CoralogixRegion, MetadataUrl ]
          AWS_LAMBDA_EXEC_WRAPPER: /opt/wrapper.sh
          LATEST_VERSIONS_PER_FUNCTION:
            Ref: LatestVersionsPerFunction
          RESOURCE_TTL_MINUTES:
            Ref: ResourceTtlMinutes
          AWS_RETRY_MODE: adaptive
          AWS_MAX_ATTEMPTS: 10
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule:
              Ref: Schedule
            Enabled: True
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Sid: GetLambdaMetadata
              Effect: Allow
              Action:
                - ec2:DescribeInstances
                - lambda:ListFunctions
                - lambda:ListVersionsByFunction
                - lambda:GetFunction
                - lambda:ListAliases
                - lambda:ListEventSourceMappings
                - lambda:GetPolicy
              Resource: "*"
        - SecretsManagerReadWrite


  PrivateKeySecret:
    Condition: IsSsmEnabled
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Coralogix Send Your Data key Secret
      Name: !Sub
        - 'lambda/coralogix/${AWS::Region}/${function}'
        - function: !Ref LambdaFunctionSSM
      SecretString: !Ref PrivateKey

  LambdaFunctionNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: IsNotificationEnabled
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn:
        !If
          - IsSsmEnabled
          - !Ref LambdaFunctionSSM.DestinationTopic
          - !Ref LambdaFunction.DestinationTopic
