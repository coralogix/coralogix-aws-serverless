AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Send logs from S3 bucket to Coralogix.
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Coralogix-S3
    Description: Send logs from S3 bucket to Coralogix.
    Author: Coralogix
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels:
      - coralogix
      - logs
      - s3
    HomePageUrl: https://coralogix.com
    SemanticVersion: 1.0.27
    SourceCodeUrl: https://github.com/coralogix/coralogix-aws-serverless
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Coralogix configuration
        Parameters:
          - ApplicationName
          - SubsystemName
          - ApiKey
          - CoralogixRegion
          - CustomDomain
      - Label:
          default: Integration configuration
        Parameters:
          - S3BucketName
          - S3KeyPrefix
          - S3KeySuffix
          - NotificationEmail
          - NewlinePattern
      - Label:
          default: Lambda configuration
        Parameters:
          - FunctionArchitecture
          - FunctionMemorySize
          - FunctionTimeout
          - BufferSize
          - BlockingPattern
          - SamplingRate
          - Debug
      - Label:
          default: Security configuration
        Parameters:
          - SsmEnabled
          - LayerARN
    ParameterLabels:
      CoralogixRegion:
        default: Region
      ApiKey:
        default: Api Key
      ApplicationName:
        default: Application Name
      SubsystemName:
        default: Subsystem Name
      NewlinePattern:
        default: Newline Pattern
      SamplingRate:
        default: Sampling Rate
      BufferSize:
        default: Buffer Size
      Debug:
        default: Debug Mode
      S3BucketName:
        default: Bucket Name
      S3KeyPrefix:
        default: Key Prefix
      S3KeySuffix:
        default: Key Suffix
      FunctionArchitecture:
        default: Architecture
      FunctionMemorySize:
        default: Memory
      FunctionTimeout:
        default: Timeout
      NotificationEmail:
        default: Notification Email
Parameters:
  LayerARN:
    Type: String
    Description: Coralogix SSM Layer ARN
    Default: ''
  SsmEnabled:
    Type: String
    Description: store coralogix private_key as a secret. True/False
    Default: 'False'
  CoralogixRegion:
    Type: String
    Description: The Coralogix location region [Europe, Europe2, India, Singapore, US]
    AllowedValues:
      - Europe
      - Europe2
      - India
      - Singapore
      - US
    Default: Europe
  ApiKey:
    Type: String
    Description: The Coralogix api key which is used to validate your authenticity
    NoEcho: true
  ApplicationName:
    Type: String
    Description: The name of your application
    MinLength: 1
    MaxLength: 64
  SubsystemName:
    Type: String
    Description: The subsystem name of your application
    MinLength: 1
    MaxLength: 64
  NewlinePattern:
    Type: String
    Description: The pattern for lines splitting
    Default: '(?:\r\n|\r|\n)'
  BlockingPattern:
    Type: String
    Description: The pattern for lines blocking
    Default: ''
  SamplingRate:
    Type: Number
    Description: Send messages with specific rate
    MinValue: 1
    Default: 1
  BufferSize:
    Type: Number
    Description: Coralogix logger buffer size
    MinValue: 12582912
    Default: 134217728
  CustomDomain:
    Type: String
    Description: The Coralogix custom domain
    Default: ''
  Debug:
    Type: String
    Description: Coralogix logger debug mode
    AllowedValues:
      - true
      - false
    Default: false
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket to watch
    AllowedPattern: '^[0-9A-Za-z\.\-_]*(?<!\.)$'
    MinLength: 3
    MaxLength: 63
  S3KeyPrefix:
    Type: String
    Description: The S3 path prefix to watch
    MaxLength: 1024
    Default: ''
  S3KeySuffix:
    Type: String
    Description: The S3 path suffix to watch
    MaxLength: 1024
    Default: ''
  FunctionArchitecture:
    Type: String
    Description: Lambda function architecture [x86_64, arm64]
    AllowedValues:
      - x86_64
      - arm64
    Default: x86_64
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory limit
    MinValue: 128
    MaxValue: 10240
    Default: 1024
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout limit
    MinValue: 30
    MaxValue: 900
    Default: 300
  NotificationEmail:
    Type: String
    Description: Failure notification email address
    MaxLength: 320
    Default: ''
Mappings:
  CoralogixRegionMap:
    Europe:
      LogUrl: coralogix.com
    Europe2:
      LogUrl: eu2.coralogix.com
    India:
      LogUrl: coralogix.in
    Singapore:
      LogUrl: coralogixsg.com
    US:
      LogUrl: coralogix.us
Conditions:
  IsNotificationEnabled:
    Fn::Not:
      - Fn::Equals:
          - Ref: NotificationEmail
          - ''
  IsSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'True'
  IsNotSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'False'
  IsRegionCustomUrlEmpty: !Not [!Equals [!Ref CustomDomain, ""]]
Resources:
  LambdaFunction:
    Condition: IsNotSsmEnabled
    Type: AWS::Serverless::Function
    Properties:
      Description: Send logs from S3 bucket to Coralogix.
      CodeUri: .
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_URL: !If
            - IsRegionCustomUrlEmpty
            - !Sub  'https://ingress.${CustomDomain}/api/v1/logs'
            - !Sub
              - '${Prefix}${Domain}${Suffix}'
              - Prefix: https://ingress.
                Domain: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, LogUrl]
                Suffix: /api/v1/logs
          CORALOGIX_BUFFER_SIZE:
            Ref: BufferSize
          private_key:
            Ref: ApiKey
          app_name:
            Ref: ApplicationName
          sub_name:
            Ref: SubsystemName
          newline_pattern:
            Ref: NewlinePattern
          blocking_pattern:
            Ref: BlockingPattern
          sampling:
            Ref: SamplingRate
          debug:
            Ref: Debug
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
      Policies:
        - S3ReadPolicy:
            BucketName:
              Ref: S3BucketName

  LambdaFunctionSSM:
      Condition: IsSsmEnabled 
      Type: AWS::Serverless::Function
      Properties:
        Description: Send logs from S3 bucket to Coralogix.
        CodeUri: .
        Layers:
          - Ref: LayerARN
        Handler: index.handler
        Runtime: nodejs16.x
        Architectures:
          - Ref: FunctionArchitecture
        MemorySize:
          Ref: FunctionMemorySize
        Timeout:
          Ref: FunctionTimeout
        Environment:
          Variables:
            CORALOGIX_URL: !If
              - IsRegionCustomUrlEmpty
              - !Sub  'https://ingress.${CustomDomain}/api/v1/logs'
              - !Sub
                - '${Prefix}${Domain}${Suffix}'
                - Prefix: https://ingress.
                  Domain: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, LogUrl]
                  Suffix: /api/v1/logs
            CORALOGIX_BUFFER_SIZE:
              Ref: BufferSize
            AWS_LAMBDA_EXEC_WRAPPER: /opt/wrapper.sh
            app_name:
              Ref: ApplicationName
            sub_name:
              Ref: SubsystemName
            newline_pattern:
              Ref: NewlinePattern
            blocking_pattern:
              Ref: BlockingPattern
            sampling:
              Ref: SamplingRate
            debug:
              Ref: Debug
        EventInvokeConfig:
          DestinationConfig:
            OnFailure:
              Type: SNS
        Policies:
          - S3ReadPolicy:
              BucketName:
                Ref: S3BucketName
          - SecretsManagerReadWrite

  CustomResourceLambdaTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../helper
      Handler: index.lambda_handler
      Runtime: python3.9
      Timeout: 50
      Policies:
        - Statement:
            - Sid: S3NotificationPolicy
              Effect: Allow
              Action:
                - s3:GetBucketNotification
                - s3:PutBucketNotification
              Resource:
                Fn::Sub: "arn:aws:s3:::${S3BucketName}"

  LambdaFunctionInvokePermission:
    Condition: IsNotSsmEnabled
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - LambdaFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: "arn:aws:s3:::${S3BucketName}"

  LambdaFunctionSSMInvokePermission: 
    Condition: IsSsmEnabled
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - LambdaFunctionSSM
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: "arn:aws:s3:::${S3BucketName}"

  LambdaTrigger:
    Condition: IsNotSsmEnabled
    Type: Custom::LambdaTrigger
    DependsOn: LambdaFunctionInvokePermission
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomResourceLambdaTriggerFunction
          - Arn
      LambdaArn:
        Fn::GetAtt:
          - LambdaFunction
          - Arn
      Bucket:
        Ref: S3BucketName
      Prefix:
        Ref: S3KeyPrefix
      Suffix:
        Ref: S3KeySuffix

  LambdaTriggerSSM: 
      Condition: IsSsmEnabled
      Type: Custom::LambdaTrigger
      DependsOn: LambdaFunctionSSMInvokePermission
      Properties:
        ServiceToken:
          Fn::GetAtt:
            - CustomResourceLambdaTriggerFunction
            - Arn
        LambdaArn:
          Fn::GetAtt:
            - LambdaFunctionSSM
            - Arn
        Bucket:
          Ref: S3BucketName
        Prefix:
          Ref: S3KeyPrefix
        Suffix:
          Ref: S3KeySuffix

  PrivateKeySecret:
    Condition: IsSsmEnabled
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Coralogix Send Your Data key Secret
      Name: !Sub
        - 'lambda/coralogix/${AWS::Region}/${function}'
        - function: !Ref LambdaFunctionSSM
      SecretString: !Ref ApiKey

  LambdaFunctionNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: IsNotificationEnabled
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn:
        Ref: LambdaFunction.DestinationTopic
        
