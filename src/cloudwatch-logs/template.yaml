AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Send CloudWatch logs to Coralogix.
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Coralogix-CloudWatch
    Description: Send CloudWatch logs to Coralogix.
    Author: Coralogix
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels:
      - coralogix
      - logs
      - cloudwatch
    HomePageUrl: https://coralogix.com
    SemanticVersion: 1.0.24
    SourceCodeUrl: https://github.com/coralogix/coralogix-aws-serverless
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Coralogix configuration
        Parameters:
          - ApplicationName
          - SubsystemName
          - ApiKey
          - CoralogixRegion
          - CustomDomain
      - Label:
          default: Integration configuration
        Parameters:
          - CloudWatchLogGroupName
          - NotificationEmail
          - NewlinePattern
      - Label:
          default: Lambda configuration
        Parameters:
          - FunctionArchitecture
          - FunctionMemorySize
          - FunctionTimeout
          - SamplingRate
          - BufferCharset
      - Label:
          default: Security configuration
        Parameters:
          - SsmEnabled
          - LayerARN
Parameters:
  LayerARN:
    Type: String
    Description: Coralogix SSM Layer ARN
    Default: ''
  SsmEnabled:
    Type: String
    Description: store coralogix private_key as a secret. True/False
    Default: 'False'
  CoralogixRegion:
    Type: String
    Description: The Coralogix location region, possible options are [Europe, Europe2, India, Singapore, US, US2]
    AllowedValues:
      - Europe
      - Europe2
      - India
      - Singapore
      - US
      - US2
    Default: Europe
  ApiKey:
    Type: String
    Description: The Coralogix Api key which is used to validate your authenticity
    NoEcho: true
  ApplicationName:
    Type: String
    Description: The name of your application
    MinLength: 1
    MaxLength: 64
  SubsystemName:
    Type: String
    Description: The subsystem name of your application, if left empty will be populated from LogGroup name
    MaxLength: 64
    Default: ''
  NewlinePattern:
    Type: String
    Description: The pattern for lines splitting
    Default: '(?:\r\n|\r|\n)'
  BufferCharset:
    Type: String
    Description: The charset to use for buffer decoding, possible options are [utf8, ascii]
    AllowedValues:
      - utf8
      - ascii
    Default: utf8
  SamplingRate:
    Type: Number
    Description: Send messages with specific rate
    MinValue: 1
    Default: 1
  CloudWatchLogGroupName:
    Type: CommaDelimitedList
    Description: The name of the CloudWatch log groups to watch
  FunctionArchitecture:
    Type: String
    Description: Lambda function architecture, possible options are [x86_64, arm64]
    AllowedValues:
      - x86_64
      - arm64
    Default: x86_64
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory limit
    MinValue: 128
    MaxValue: 3008
    Default: 1024
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout limit
    MinValue: 30
    MaxValue: 900
    Default: 300
  NotificationEmail:
    Type: String
    Description: Failure notification email address
    MaxLength: 320
    Default: ''
  CustomDomain:
    Type: String
    Description: The Coralogix custom domain
    Default: ''
Mappings:
  CoralogixRegionMap:
    Europe:
      LogUrl: coralogix.com
    Europe2:
      LogUrl: eu2.coralogix.com
    India:
      LogUrl: coralogix.in
    Singapore:
      LogUrl: coralogixsg.com
    US:
      LogUrl: coralogix.us
    US2:
      LogUrl: cx498.coralogix.com
Conditions:
  IsNotificationEnabled:
    Fn::Not:
      - Fn::Equals:
          - Ref: NotificationEmail
          - ''
  IsSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'True'
  IsNotSsmEnabled:
    Fn::Equals:
      - Ref: SsmEnabled
      - 'False'
  IsRegionCustomUrlEmpty: !Not [!Equals [!Ref CustomDomain, ""]]
Resources:
  LambdaFunction:
    Condition: IsNotSsmEnabled
    Type: AWS::Serverless::Function
    Properties:
      Description: Send CloudWatch logs to Coralogix.
      CodeUri: .
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_URL: !If
            - IsRegionCustomUrlEmpty
            - !Sub 'ingress.${CustomDomain}'
            - !Sub
              - '${Prefix}${Domain}'
              - Prefix: ingress.
                Domain: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, LogUrl]
          private_key:
            Ref: ApiKey
          app_name:
            Ref: ApplicationName
          sub_name:
            Ref: SubsystemName
          newline_pattern:
            Ref: NewlinePattern
          buffer_charset:
            Ref: BufferCharset
          sampling:
            Ref: SamplingRate
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
  LambdaFunctionSsm:
    Condition: IsSsmEnabled
    Type: AWS::Serverless::Function
    Properties:
      Description: Send CloudWatch logs to Coralogix.
      CodeUri: .
      Policies:
        - SecretsManagerReadWrite
      Handler: index.handler
      Runtime: nodejs16.x
      Layers:
        - Ref: LayerARN
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_URL: !If
            - IsRegionCustomUrlEmpty
            - !Sub 'ingress.${CustomDomain}'
            - !Sub
              - '${Prefix}${Domain}'
              - Prefix: ingress.
                Domain: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, LogUrl]
          AWS_LAMBDA_EXEC_WRAPPER: /opt/wrapper.sh
          app_name:
            Ref: ApplicationName
          sub_name:
            Ref: SubsystemName
          newline_pattern:
            Ref: NewlinePattern
          buffer_charset:
            Ref: BufferCharset
          sampling:
            Ref: SamplingRate
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
  LambdaFunctionInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !If
          - IsNotSsmEnabled
          - !GetAtt LambdaFunction.Arn
          - !GetAtt LambdaFunctionSsm.Arn
        Action: lambda:InvokeFunction
        Principal: logs.amazonaws.com
        SourceAccount:
          Ref: AWS::AccountId
        SourceArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*"

  CustomResourceLambdaTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../helper
      Handler: cloudwatch.lambda_handler
      Runtime: python3.9
      Timeout: 50
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - "logs:PutSubscriptionFilter"
              Resource: !Sub  "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*"

  LambdaTrigger:
    Type: Custom::LambdaTrigger
    DependsOn: LambdaFunctionInvokePermission
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomResourceLambdaTriggerFunction
          - Arn
      LambdaArn: !If
          - IsNotSsmEnabled
          - !GetAtt LambdaFunction.Arn
          - !GetAtt LambdaFunctionSsm.Arn
      CloudwatchGroup:
        Ref: CloudWatchLogGroupName

  PrivateKeySecret:
    Condition: IsSsmEnabled
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Coralogix Send Your Data key Secret
      Name: !Sub
        - 'lambda/coralogix/${AWS::Region}/${function}'
        - function: !Ref LambdaFunctionSsm
      SecretString: !Ref ApiKey

  LambdaFunctionNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: IsNotificationEnabled
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn: !If
        - IsSsmEnabled
        - !Ref LambdaFunctionSsm.DestinationTopic
        - !Ref LambdaFunction.DestinationTopic
